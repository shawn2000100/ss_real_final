{"version":3,"sources":["webpack:///../node_modules/@aws-amplify/ui-components/dist/esm-es5/amplify-form-field_4.entry.js"],"names":["AmplifyFormField","hostRef","this","type","required","placeholder","prototype","render","class","label","htmlFor","fieldId","description","id","name","handleInputChange","value","inputProps","disabled","hint","style","AmplifyHint","AmplifyInput","formSubmit","handleKeyDown","ev","key","emit","_this","Object","assign","onInput","event","AmplifyLabel"],"mappings":"2FAAA,+MAEIA,EAAkC,WAClC,SAASA,EAAiBC,GACtB,YAAiBC,KAAMD,GAEvBC,KAAKC,KAAO,OAEZD,KAAKE,UAAW,EAEhBF,KAAKG,YAAc,GAKvB,OAHAL,EAAiBM,UAAUC,OAAS,WAChC,OAAQ,WAAD,CAAG,MAAO,CAAEC,MAAO,cAAgBN,KAAKO,OAAU,WAAD,CAAG,MAAO,CAAED,MAAO,oBAAsB,YAAE,gBAAiB,CAAEE,QAASR,KAAKS,SAAWT,KAAKO,QAAUP,KAAKU,aAAgB,WAAD,CAAG,MAAO,CAAEC,GAAIX,KAAKS,QAAU,eAAgBH,MAAO,yBAA0B,YAAa,0BAA4BN,KAAKU,aAAe,YAAE,MAAO,KAAM,YAAE,OAAQ,CAAEE,KAAM,SAAW,YAAE,gBAAiB,CAAEH,QAAST,KAAKS,QAASC,YAAaV,KAAKU,YAAaT,KAAMD,KAAKC,KAAMY,kBAAmBb,KAAKa,kBAAmBV,YAAaH,KAAKG,YAAaS,KAAMZ,KAAKY,KAAME,MAAOd,KAAKc,MAAOC,WAAYf,KAAKe,WAAYC,SAAUhB,KAAKgB,aAAehB,KAAKiB,MAAQ,YAAE,eAAgB,CAAEN,GAAIX,KAAKS,QAAU,SAAWT,KAAKiB,QAEjrBnB,EAb0B,GAerCA,EAAiBoB,MAhBS,uSAiB1B,IACIC,EAA6B,WAC7B,SAASA,EAAYpB,GACjB,YAAiBC,KAAMD,GAK3B,OAHAoB,EAAYf,UAAUC,OAAS,WAC3B,OAAQ,WAAD,CAAG,MAAO,CAAEC,MAAO,QAAU,YAAE,OAAQ,QAE3Ca,EAPqB,GAShCA,EAAYD,MAVS,2OAWrB,IACIE,EAA8B,WAC9B,SAASA,EAAarB,GAClB,YAAiBC,KAAMD,GAEvBC,KAAKC,KAAO,OAEZD,KAAKa,kBAAoB,aAEzBb,KAAKG,YAAc,GACnBH,KAAKqB,WAAa,YAAYrB,KAAM,aAAc,GAYtD,OATAoB,EAAahB,UAAUkB,cAAgB,SAAUC,GAC9B,UAAXA,EAAGC,KACHxB,KAAKqB,WAAWI,KAAKF,IAG7BH,EAAahB,UAAUC,OAAS,WAC5B,IAAIqB,EAAQ1B,KACZ,OAAQ,WAAD,CAAG,IAAM,CAAEM,MAAO,cAAgB,YAAE,QAASqB,OAAOC,OAAO,CAAEjB,GAAIX,KAAKS,QAAS,mBAAoBT,KAAKS,SAAWT,KAAKU,YAAcV,KAAKS,QAAU,eAAiB,KAAMR,KAAMD,KAAKC,KAAM4B,QAAS,SAAUC,GAAS,OAAOJ,EAAMb,kBAAkBiB,IAAW3B,YAAaH,KAAKG,YAAaS,KAAMZ,KAAKY,KAAMN,MAAO,QAASQ,MAAOd,KAAKc,MAAOE,SAAUhB,KAAKgB,UAAYhB,KAAKe,eAE1XK,EArBsB,GAuBjCA,EAAaF,MAxBS,qlBAyBtB,IACIa,EAA8B,WAC9B,SAASA,EAAahC,GAClB,YAAiBC,KAAMD,GAK3B,OAHAgC,EAAa3B,UAAUC,OAAS,WAC5B,OAAQ,WAAD,CAAG,QAAS,CAAEC,MAAO,QAASE,QAASR,KAAKQ,SAAW,YAAE,OAAQ,QAErEuB,EAPsB,GASjCA,EAAab,MAVS","file":"16.bundle.js","sourcesContent":["import { r as registerInstance, h, c as createEvent, H as Host } from './index-82dae9d1.js';\nvar amplifyFormFieldCss = \":host{--label-font-size:var(--amplify-text-md);--description-font-size:var(--amplify-text-sm)}.form-field{margin-bottom:15px}.form-field-label{display:block;font-size:var(--label-font-size);padding-bottom:0.5em}.form-field-description{font-size:var(--description-font-size);padding-top:0.5em}\";\nvar AmplifyFormField = /** @class */ (function () {\n    function AmplifyFormField(hostRef) {\n        registerInstance(this, hostRef);\n        /** The input type.  Can be any HTML input type. */\n        this.type = 'text';\n        /** The required flag in order to make an input required prior to submitting a form */\n        this.required = false;\n        /** (Optional) The placeholder for the input element.  Using hints is recommended, but placeholders can also be useful to convey information to users. */\n        this.placeholder = '';\n    }\n    AmplifyFormField.prototype.render = function () {\n        return (h(\"div\", { class: \"form-field\" }, this.label && (h(\"div\", { class: \"form-field-label\" }, h(\"amplify-label\", { htmlFor: this.fieldId }, this.label))), this.description && (h(\"div\", { id: this.fieldId + \"-description\", class: \"form-field-description\", \"data-test\": \"form-field-description\" }, this.description)), h(\"div\", null, h(\"slot\", { name: \"input\" }, h(\"amplify-input\", { fieldId: this.fieldId, description: this.description, type: this.type, handleInputChange: this.handleInputChange, placeholder: this.placeholder, name: this.name, value: this.value, inputProps: this.inputProps, disabled: this.disabled }))), this.hint && h(\"amplify-hint\", { id: this.fieldId + \"-hint\" }, this.hint)));\n    };\n    return AmplifyFormField;\n}());\nAmplifyFormField.style = amplifyFormFieldCss;\nvar amplifyHintCss = \":host{--color:var(--amplify-grey);--font-family:var(--amplify-font-family);--font-size:var(--amplify-text-xs)}.hint{color:var(--color);font-family:var(--font-family);font-weight:300;font-size:var(--font-size);margin-bottom:2.625rem}\";\nvar AmplifyHint = /** @class */ (function () {\n    function AmplifyHint(hostRef) {\n        registerInstance(this, hostRef);\n    }\n    AmplifyHint.prototype.render = function () {\n        return (h(\"div\", { class: \"hint\" }, h(\"slot\", null)));\n    };\n    return AmplifyHint;\n}());\nAmplifyHint.style = amplifyHintCss;\nvar amplifyInputCss = \":host{--color:var(--amplify-secondary-color);--background-color:var(--amplify-secondary-contrast);--border-color:var(--amplify-light-grey);--border-color-focus:var(--amplify-primary-color)}.input-host{width:100%}.input{display:block;width:100%;padding:16px;font-size:var(--amplify-text-sm);color:var(--color);background-color:var(--background-color);background-image:none;border:1px solid var(--border-color);border-radius:3px;-webkit-box-sizing:border-box;box-sizing:border-box;margin:0 0 0.625rem 0}.input:focus{outline:none;border-color:var(--border-color-focus)}.input:disabled{opacity:0.5}\";\nvar AmplifyInput = /** @class */ (function () {\n    function AmplifyInput(hostRef) {\n        registerInstance(this, hostRef);\n        /** The input type.  Can be any HTML input type. */\n        this.type = 'text';\n        /** The callback, called when the input is modified by the user. */\n        this.handleInputChange = function () { return void 0; };\n        /** (Optional) The placeholder for the input element.  Using hints is recommended, but placeholders can also be useful to convey information to users. */\n        this.placeholder = '';\n        this.formSubmit = createEvent(this, \"formSubmit\", 7);\n    }\n    // eslint-disable-next-line\n    AmplifyInput.prototype.handleKeyDown = function (ev) {\n        if (ev.key === 'Enter') {\n            this.formSubmit.emit(ev);\n        }\n    };\n    AmplifyInput.prototype.render = function () {\n        var _this = this;\n        return (h(Host, { class: \"input-host\" }, h(\"input\", Object.assign({ id: this.fieldId, \"aria-describedby\": this.fieldId && this.description ? this.fieldId + \"-description\" : null, type: this.type, onInput: function (event) { return _this.handleInputChange(event); }, placeholder: this.placeholder, name: this.name, class: \"input\", value: this.value, disabled: this.disabled }, this.inputProps))));\n    };\n    return AmplifyInput;\n}());\nAmplifyInput.style = amplifyInputCss;\nvar amplifyLabelCss = \":host{--label-color:var(--amplify-secondary-color)}.label{color:var(--label-color);font-size:var(--amplify-text-sm);margin-bottom:16px}\";\nvar AmplifyLabel = /** @class */ (function () {\n    function AmplifyLabel(hostRef) {\n        registerInstance(this, hostRef);\n    }\n    AmplifyLabel.prototype.render = function () {\n        return (h(\"label\", { class: \"label\", htmlFor: this.htmlFor }, h(\"slot\", null)));\n    };\n    return AmplifyLabel;\n}());\nAmplifyLabel.style = amplifyLabelCss;\nexport { AmplifyFormField as amplify_form_field, AmplifyHint as amplify_hint, AmplifyInput as amplify_input, AmplifyLabel as amplify_label };\n"],"sourceRoot":""}